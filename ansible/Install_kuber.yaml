- hosts: kuber
  become: yes
  gather_facts: no

  tasks:
    - name: Disable swap
      ansible.builtin.shell: 'swapoff -a'

    - name: Remove swap from fstab
      ansible.builtin.mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Ensure /etc/modules-load.d exists
      ansible.builtin.file:
        path: /etc/modules-load.d
        state: directory

    - name: Create containerd.conf file if it does not exist
      ansible.builtin.file:
        path: /etc/modules-load.d/containerd.conf
        state: touch

    - name: Add line to /etc/modules-load.d/containerd.conf
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/containerd.conf
        line: "{{ item.line }}"
      with_items:
        - { line: 'overlay' }
        - { line: 'br_netfilter' }

    - name: Load overlay
      ansible.builtin.shell: 'modprobe overlay'

    - name: Load br_netfilter
      ansible.builtin.shell: 'modprobe br_netfilter'

    - name: Ensure /etc/sysctl.d exists
      ansible.builtin.file:
        path: /etc/sysctl.d
        state: directory

    - name: Create kubernetes.conf if it does not exist
      ansible.builtin.file:
        path: /etc/sysctl.d/kubernetes.conf
        state: touch

    - name: Add line to /etc/sysctl.d/kubernetes.conf
      ansible.builtin.lineinfile:
        path: /etc/sysctl.d/kubernetes.conf
        line: "{{ item.line }}"
      with_items:
        - { line: 'net.bridge.bridge-nf-call-ip6tables = 1' }
        - { line: 'net.bridge.bridge-nf-call-iptables = 1' }
        - { line: 'net.ipv4.ip_forward = 1' }

    - name: Reload sysctl configuration
      ansible.builtin.shell: 'sysctl --system'

    - name: Install apt-transport-https ca-certificates curl gpg
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
          - gnupg2
          - software-properties-common
        state: present
        update_cache: true

    - name: Config containerd default
      ansible.builtin.shell: 'containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1'

    - name: Edit /etc/containerd/config.toml to enable SystemdCgroup
      ansible.builtin.shell: 'sed -i "s/SystemdCgroup = false/SystemdCgroup = true/g" /etc/containerd/config.toml'

    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted

    - name: Enable service containerd
      ansible.builtin.service:
        name: containerd
        enabled: yes

    - name: Add Kubernetes GPG key
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /'
        state: present

    - name: Update apt and install kubeadm, kubelet, kubectl
      ansible.builtin.apt:
        pkg:
          - kubeadm
          - kubelet
          - kubectl
        state: present
        update_cache: true

    - name: Hold kubeadm package
      ansible.builtin.dpkg_selections:
        name: kubeadm
        selection: hold

    - name: Hold kubelet package
      ansible.builtin.dpkg_selections:
        name: kubelet
        selection: hold

    - name: Hold kubectl package
      ansible.builtin.dpkg_selections:
        name: kubectl
        selection: hold

    - name: Restart kubelet
      ansible.builtin.service:
        name: kubelet
        state: restarted

- hosts: master
  become: yes
  gather_facts: no

  tasks:
    - name: Download manifest for Calico
      ansible.builtin.get_url:
        url: https://calico-v3-25.netlify.app/archive/v3.25/manifests/calico.yaml
        dest: /tmp/calico.yaml

    - name: Configure Kubernetes API server address
      ansible.builtin.shell: |
        kubectl config set-cluster kubernetes --server=https://158.160.40.254:6443
        kubectl config set context kubernetes --cluster=kubernetes --user=kubernetes-admin
      when: inventory_hostname == "master"

    - name: Wait for Kubernetes API server to be ready
      ansible.builtin.shell: "kubectl wait --for=condition=ready node --all --timeout=300s"
      when: inventory_hostname == "master"

    - name: Deploy Calico
      ansible.builtin.shell: 'kubectl apply -f /tmp/calico.yaml'
